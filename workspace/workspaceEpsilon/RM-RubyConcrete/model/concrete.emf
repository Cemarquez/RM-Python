@namespace(uri="concrete", prefix="concrete")
@gmf
package concrete;

@gmf.diagram
class MClassDiagram{
	attr String name;
	val MPackage[*] lstMPackage;
	val MClass[*] lstMClass;
	val MRelationship[*] lstMRelationship;
}

@gmf.node(label = "name" )
class MPackage{
	attr String name;
	attr String path;
	val MClass[*] lstMClass;
	val MPackage[*] lstMPackage;
}

@gmf.node(label = "name" )
class MClass{
	attr String name;
	attr String accessModifier;
	attr String comments;
	attr boolean abstracts;
	attr String stereoType;
	attr String path;
	val MRelationship[*] ltsMRelationships ;
	@gmf.compartment
	val MAttribute[*] lstMAttribute;
	@gmf.compartment
	val MFunction[*] lstMFunction;
}

@gmf.link(source = "source", target = "target", style = "dot", width = "2")
class MRelationship{
	ref MClass source;
	ref MClass target;
	attr String relationshipType;
	attr String multiplicitySource;
	attr String multiplicityTarget;
	attr String sourceRole;
	attr String targetRole;
	attr String navegabilitySource;
	attr String navegabilityTarget;
}

@gmf.node(label = "name" )
class MAttribute{
	attr String name;
	attr String dataType;
	attr String accessModifier;
	attr String defaultValue;
	attr String comments;
}

@gmf.node(label = "name" )
class MFunction{
	attr String name;
	attr String accessModifier;
	attr String returnType;
	attr String semantics;
	attr String comments;
	val MParameter[*] lstMParameter;
}

class MParameter{
	attr String name;
	attr String dataType;
}
