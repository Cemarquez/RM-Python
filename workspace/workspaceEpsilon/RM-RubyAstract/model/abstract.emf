@namespace(uri="abstract", prefix="abstract")
@gmf
package abstracts;

class ModelFactory{
	attr String nombre;
	attr String ruta;
	val MPackage[*] lstPackages;
}

class MPackage{
	attr String name;
	attr String path;
	val MClass[*] lstMClass;
	val MPackage[*] lstMPackage;
}

class MClassDiagram{
	attr String name;
	val MPackage[*] lstMPackage;
	val MClass[*] lstMClass;
}



class MClass{
	attr String name;
	attr String accessModifier;
	attr String comments;
	attr String path;
	val MAssociation[*] lstMAssoctiation;
	val MInheritance[*] lstMInheritance;
	val MContainment[*] lstMContainment;
	val MAttribute[*] lstAttributes;
	val MFunction[*] lstFunction;
}

class MAssociation{
	ref MClass source;
	ref MClass target;
	attr String relationshipType;
	attr String multiplicitySource;
	attr String multiplicityTarget;
	attr String sourceRole;
	attr String targetRole;
	attr String navegabilitySource;
	attr String navegabilityTarget;
}
class MInheritance{
	ref MClass source;
	ref MClass target;
	
}

class MContainment{
	ref MClass source;
	ref MClass target;
	attr String multiplicityTarget;
	attr String sourceRole;
	attr String targetRole;
}

class MAttribute{
	attr String name;
	attr String type;
	attr String defaultValue;
	attr String comments;
	attr boolean constant;
	
}

class MFunction{
	attr String name;
	attr String accessModifier; 
	attr String returnType;
	attr String semantics;
	attr String comments;
	
}

